//This is it — time to put your new JavaScript skills to work. 
//These projects are similar to the algorithm scripting challenges you've done before – just much more difficult.

//Complete these 5 JavaScript projects to earn the JavaScript Algorithms and Data Structures certification.

//Palindrome Checker
//Return 'true' if the given string is a palindrome. Otherwise, return 'false'.

//A "palindrome" is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing.

//Note: You'll need to remove "all non-alphanumeric characters" (punctuation, spaces and symbols) and 
//    turn everything into the same case (lower or upper case) in order to check for palindromes.

//We'll pass strings with varying formats, such as 'racecar', 'RaceCar', and 'race CAR' among others.

//We'll also pass strings with special symbols, such as '2A3*3a2', '2A3 3a2', and '2_A3*3#A2'.


//UNCHANGED CODE:

//    function palindrome(str) {
//      return true;
//    }

//    palindrome("eye");

//CHANGED CODE:
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\First Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  console.log(strClone.match(/([\w])/g))
  return true;
}

let result = palindrome("0_0 (: /-\ :) 0-0");
console.log(result);
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////////////////Second Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  //console.log(strClone.match(/([\w])/g));
  let individualCharacters = strClone.match(/([\w])/g);
  console.log(individualCharacters);
  return true;
}

let result = palindrome("five|\_/|four");
console.log(result);
//////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\Third Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  //console.log(strClone.match(/([\w])/g));
  let individualCharacters = strClone.match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        console.log(typeof (individualCharacters[i]));
        if (Object.keys(individualCharacters[i])){} 
    };
    //console.log((individualCharacters[i]).indexOf());
    
  }console.log(typeof (Object.values(individualCharacters[0])))
  ;
  return true;
}

let result = palindrome("five|\_/|four");
console.log(result);
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////////////////////////Forth Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  //console.log(strClone.match(/([\w])/g));
  let individualCharacters = strClone.match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === individualCharacters[4]) {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          console.log(afterI);
          individualCharacters.splice(i, i, afterI) 
        }
    };
    //console.log((individualCharacters[i]).indexOf());
    
  };
  console.log((individualCharacters));
  return true;
}

let result = palindrome("five|\_/|four");
console.log(result);
////////////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\Fifth Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  //console.log(strClone.match(/([\w])/g));
  let individualCharacters = strClone.match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === individualCharacters[4]) {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          console.log(afterI[0]);
          individualCharacters.pop();
          for (let j = 0; j < afterI.length; j++) {
            individualCharacters.push(afterI[j]);
          };
        };
    };
    //console.log((individualCharacters[i]).indexOf());
    
  };
  console.log((individualCharacters));
  return true;
}

let result = palindrome("five|\_/|four");
console.log(result);
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////Sixth Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  //console.log(strClone.match(/([\w])/g));
  let individualCharacters = strClone.toLowerCase().match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === "") {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          console.log(afterI[0]);
          individualCharacters.pop();
          for (let j = 0; j < afterI.length; j++) {
            individualCharacters.push(afterI[j]);
          };
        };
    };
    //console.log((individualCharacters[i]).indexOf());
    
  };
  console.log((individualCharacters));
  return true;
}

let result = palindrome("five|\_/|four");
console.log(result);
///////////////////////////////////////////////////////////////////////////////////////////////////
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\Seventh Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  let individualCharacters = individualCharacterHandler(strClone);
  
  console.log(individualCharacters);
  return true;
};
let result = palindrome("five|\_/|four");
console.log(result);

function individualCharacterHandler(targetStr) {
  let individualCharacters = targetStr.toLowerCase().match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        //console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === "") {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          //console.log(afterI[0]);
          individualCharacters.pop();
          for (let j = 0; j < afterI.length; j++) {
            individualCharacters.push(afterI[j]);
        };
      };
    };
  };
  return individualCharacters;
};
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
///////////////////////////////////////////////Eighth Analysis
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  let individualCharacters = individualCharacterHandler(strClone);
  
  console.log(individualCharacters);
  let reverseCharacters = individualCharacters.reverse();
  console.log(reverseCharacters);

  return true;
};
let result = palindrome("five|\_/|four");
console.log(result);

function individualCharacterHandler(targetStr) {
  let individualCharacters = targetStr.toLowerCase().match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        //console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === "") {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          //console.log(afterI[0]);
          individualCharacters.pop();
          for (let j = 0; j < afterI.length; j++) {
            individualCharacters.push(afterI[j]);
        };
      };
    };
  };
  return individualCharacters;
};
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////THE SOLUTION CODE
function palindrome(str) {
  console.log(str);
  let strClone = str.slice();
  let individualCharacters = individualCharacterHandler(strClone);
  let indCharClone = individualCharacters.slice();
  
  //console.log(reversal(individualCharacters));
  let reverseCharacters = reversal(indCharClone);
  for (let i = 0; i < individualCharacters.length; i++) {
    //console.log(individualCharacters[i], reverseCharacters[i])
    if (individualCharacters[i] !== reverseCharacters[i]) { 
      return false;
    };
  };
  console.log(reverseCharacters);

  return true;
};
let result = palindrome("five|\_/|four");
console.log(result);

function individualCharacterHandler(targetStr) {
  let individualCharacters = targetStr.toLowerCase().match(/([\w])/g);
  for (let i = 0; i < individualCharacters.length; i++) {
    if (individualCharacters[i] === "_") {
      individualCharacters[i] = ""
        //console.log(typeof (individualCharacters[i]));
        if ((individualCharacters[i]) === individualCharacters[0]){
          individualCharacters.shift();
        } else if ((individualCharacters[i]) === individualCharacters[1]) {
          individualCharacters.splice(i,i);
        } else if ((individualCharacters[i]) === "") {
          let afterI = individualCharacters.splice(i+1);
          //afterI.shift();
          //console.log(afterI[0]);
          individualCharacters.pop();
          for (let j = 0; j < afterI.length; j++) {
            individualCharacters.push(afterI[j]);
        };
      };
    };
  };
  return individualCharacters;
};

function reversal(targetArr) {
  let reverseCharacters = targetArr.reverse();
  return reverseCharacters;
};
///////////////////////////////////////////////////////////////////////////////////

//OUTPUT:
\\\\\\\\\\\\\\\\\\\\\\\\\\First Analysis Output
0_0 (: /- :) 0-0
[ '0', '_', '0', '0', '0' ]
true
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////Second Analysis Ouyput
five|_/|four
[ 'f', 'i', 'v', 'e', '_', 'f', 'o', 'u', 'r' ]
true
//////////////////////////////////////////////////////////////

//Roman Numeral Converter
//Convert the given number into a roman numeral.

//Roman numerals	Arabic numerals
//      M	              1000
//      CM	            900
//      D	              500
//      CD	            400
//      C	              100
//      XC	            90
//      L	              50
//      XL	            40
//      X	              10
//      IX	            9
//      V	              5
//      IV	            4
//      I	              1
//All roman numerals answers should be provided in upper-case


//UNCHANGED CODE:

//    function convertToRoman(num) {
//     return num;
//    }

//    convertToRoman(36);

//CHANGED CODE:



//OUTPUT:

//


//UNCHANGED CODE:



//CHANGED CODE:



//OUTPUT:


//


//UNCHANGED CODE:



//CHANGED CODE:



//OUTPUT:

