//An algorithm is a series of step-by-step instructions that describe how to do something.

//To write an effective algorithm, it helps to break a problem down into smaller parts and think carefully about how to solve each part with code.

//In this course, you'll learn the fundamentals of algorithmic thinking by writing algorithms that do everything from 
//    converting temperatures to handling complex 2D arrays.


//Convert Celsius to Fahrenheit
//The formula to convert from Celsius to Fahrenheit is the temperature in Celsius times '9/5', plus '32'.

//You are given a variable 'celsius' representing a temperature in Celsius. 
//Use the variable 'fahrenheit' already defined and assign it the Fahrenheit temperature equivalent to the given Celsius temperature. 
//Use the formula mentioned above to help convert the Celsius temperature to Fahrenheit.

//UNCHANGED CODE:

//    function convertToF(celsius) {
//      let fahrenheit;
//      return fahrenheit;
//    }

//    convertToF(30);

//CHANGED CODE:

function convertToF(celsius) {
  let fahrenheit = (celsius * (9 / 5)) + 32;
  console.log(fahrenheit);
  return fahrenheit;
}

convertToF(30);

//OUTPUT: 86


//Reverse a String
//Reverse the provided string.

//You may need to turn the string into an array before you can reverse it.

//Your result must be a string.

//UNCHANGED CODE:

//    function reverseString(str) {
//      return str;
//    }

//    reverseString("hello");

//CHANGED CODE:
//Version 1:
function reverseString(str) {
  let reverseRegex = /[A-Za-z]/g;
  let result = str.match(reverseRegex);
  console.log(result);
  let reverseStr = [];
  reverseStr.push(str);
  console.log(reverseStr);
  
  
  console.log(str)
  return str;
}

reverseString("hello");

//Version 2:
function reverseString(str) {

  let reverseRegex = /[\w\s]/g;
  let result = str.match(reverseRegex);
  console.log(result);
  //let revStrArr = [];
  let revStrArr = result;
  console.log(revStrArr);

  return str;
}

reverseString("hello");

//Version 3:
function reverseString(str) {
  let reverseRegex = /[\w\s]/g;
  let result = str.match(reverseRegex);
  console.log(result);
  let reverseStr = [];
  reverseStr.push(str);
  //console.log(reverseStr);
  for (let i =0; i < result.length; i++) {
    //while (i < result.length)
    {
      let resultA = result;
      let resultB = result.pop();
      let j = 0;
      //console.log(resultB)
      resultA.splice(j, i, resultB);
      console.log(resultA);
    }
  }
  
  //console.log(str)
  return str;
}

reverseString("hello");

//Solution version:

function reverseString(str) {
  let reverseStr = "";
  for (let i = str.length - 1; i >= 0; i--) {
    reverseStr += str[i];
  }
  console.log(reverseStr)
  return str;
}

reverseString("hello");

function reverseString(str) {
  let reverseStr = str.split("");
  reverseStr.reverse();
  /*for (let i = str.length - 1; i >= 0; i--) {
    reverseStr += str[i];
  }*/
  console.log(reverseStr.join(""));
  return str;
}

reverseString("hello");

//Final solution with explanation:

function reverseString(str) {
  let revRegex = /[\w+\s?]/g;// This section of using regular expressions is not needed except that it is used to create strArr arry.
  let strArr = str.match(revRegex);// This array or variable can be simply created using the same technique applied to strArrC, 
      which is not truely an array but a string.
  //let strArrB = strArr.slice(); This is from an earlier attempt of trying to parse out the letters from the 
      array by making a copy to compare results and attempts.
  let strArrC = ('');// This form of reversing text uses the for loop that counts backwards, starting at the end of the string or array.
  let strRev = str.split('');// This variable is used for the built-in JS operations for reversing text; no need to use a for loop.
  strRev.reverse();// After parsing out the string into the variable strRev the built-in reverse function can be applied.
  for (let i = strArr.length - 1; i >= 0; i--){
    //strArrB += strArr[i];
    
    strArrC += str[i];   
  }
  //console.log(strArrB);
  console.log(strArrC);
  console.log(strRev.join(''));// Used to return the array back into text.
  return strArrC;
}

reverseString("hello");

//OUTPUT:
//Version 1:
[ 'h', 'e', 'l', 'l', 'o' ]
[ 'hello' ]
hello

//Version 2:
[ 'h', 'e', 'l', 'l', 'o' ]
[ 'h', 'e', 'l', 'l', 'o' ]

//Version 3:
[ 'h', 'e', 'l', 'l', 'o' ]
[ 'o', 'h', 'e', 'l', 'l' ]
[ 'l', 'h', 'e', 'l' ]
[ 'l', 'e' ]

//Solutions:  olleh

//Factorialize a Number
//Return the factorial of the provided integer.

//If the integer is represented with the letter 'n', a factorial is the product of all positive integers less than or equal to 'n'.

//Factorials are often represented with the shorthand notation 'n!'

//For example: '5! = 1 * 2 * 3 * 4 * 5 = 120'

//Only integers greater than or equal to zero will be supplied to the function.

//UNCHANGED CODE:

//    function factorialize(num) {
//      return num;
//    }

//    factorialize(5);

//CHANGED CODE:



//OUTPUT:


//

//UNCHANGED CODE:



//CHANGED CODE:



//OUTPUT:


